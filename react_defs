pakage.json - contains all the dependencies, scripts & testing resource required for the project
pakage-lock.json - to ensure proper installation of dependencies
node_modules - where all the dependencies ll be installed during creating react app
public - a beginner should only be concerned with index.html which ll provide the view
src - index.js - specify root/app component & DOM element which ll be controlled by react
                everything inside root(in index.html) ll be controlled by react

components - all the components ll be stored in a single component, so 5 components in total
2 types - stateless functional component(javascript functions) & 
          stateful class component (class extending component class)
    components describe a part of ui
    they are reusable & nested inside other components

functional components - properties(props) -->java script fns -->HTML (jsx)

class components - it ll have some internal state which ll be private to that component

jsx  - jsx tags--internally converted into-->React.createElement....hence the need of React import

if i want dynamic content, pass the info between the tags

https://www.tutorialspoint.com/reactjs/reactjs_jsx.htm - for more info on jsx

refer to Greet.js to know how to use props in functions
refer Welcome.js to know how to use props in classes

i can specify any no. of properties, react ll bundle all the props together
props are immutable

state  - used to populate with dynamic properties

state is an object that is privately maintained inside a component.

Babel - babel ll convert my jsx element into React.createElement()

react DOM is virtual representation of real DOM - its faster than real DOM

Instead of rendering single element in DOM, we render an app component which ll have tree 
of components.

Dont modify the state directltt, use set state for modification.cuz, state wont re render 
the component, whereas setState ll.

state is asynchronous

Destructuring of props can be done using parameters or fn body
& in classes Destructuring is done in render method eg - const {name, heroName}=this.props

Dont call the function with () as your event handler, cuz it ll auto log in the event, 
just name the function as your event handler.

Go through this link as it ll help one to understand the scope of this keyword in java script-
https://www.freecodecamp.org/news/the-magic-of-the-this-keyword-in-javascript-ce3ce571013e/
In JavaScript we don’t make copies when assigning variables. We create references.
context is also an instance of an object, Just not necessarily the one belonging to the scope
we’re in. It is more like a link to the outside world. And the outside world is — roughly — 
the place from which the function was called.
Inorder to solve this, i need to bind this with the particular object...3 ways to do it
-1. In the event handler, use the following syntax {this.clickHandler.bind(this)}
-2. Just use the arrow functions
-3. bind the this keyword with that in the constructor //this.clickHandler = 
    this.clickHandler.bind(this) -- in the event handler i can call using {this.clickHandler}

Conditional rendering - Although there are several ways to achieve this, ternary operator 
is the best approach as the syntax ll be simple (others ways - if else,...etc)

visit mdn web docs for more info on java script





